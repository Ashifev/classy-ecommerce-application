<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>DASHMIN - Bootstrap Admin Template</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="" name="keywords">
    <meta content="" name="description">

    <!-- Favicon -->
    <link href="/admin/img/favicon.ico" rel="icon">

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Heebo:wght@400;500;600;700&display=swap" rel="stylesheet">
    
    <!-- Icon Font Stylesheet -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">

    <!-- Libraries Stylesheet -->
    <link href="/admin/lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">
    <link href="/admin/lib/tempusdominus/css/tempusdominus-bootstrap-4.min.css" rel="stylesheet" />

    <!-- Customized Bootstrap Stylesheet -->
    <link href="/admin/css/bootstrap.min.css" rel="stylesheet">

    <!-- Template Stylesheet -->
    <link href="/admin/css/style.css" rel="stylesheet">
</head>

<body>
    <div class="container-xxl position-relative bg-white d-flex p-0">
        <!-- Spinner Start -->
        <div id="spinner" class="show bg-white position-fixed translate-middle w-100 vh-100 top-50 start-50 d-flex align-items-center justify-content-center">
            <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
        <!-- Spinner End -->

        <!-- Sidebar Start -->
        <%- include('../partials/adminSideBar') %>
        <!-- Sidebar End -->
       
        <!-- Content Start -->
        <div class="content">

            <!-- Navbar Start -->
            <%- include('../partials/adminNav') %>
            <!-- Navbar End -->

            <!-- Widgets Start -->
            <div class="page-wrapper">
                <div class="page-content">
                  <!--breadcrumb-->
                  
                  <!--end breadcrumb-->
                  <div class="row">
                    <% if (err) { %>
                      <div class="alert alert-danger text-center">
                        <%= err %>
                      </div>
                      <% } else { %>
                      <% } %>
                    <div class="col-xl-9 mx-auto mt-5">
                      <h6 class="mb-0 text-uppercase">Add New Coupon</h6>
                      <hr />
                      <div class="card border-top border-0 border-4 border-danger">
                        <div class="card-body p-5">
                            <form id="addCouponForm" method="post" action="/admin/coupon-edited/<%=coupon._id%>">
                                <input type="hidden" id="couponId" data-couponId = "<%= coupon._id %>">
                                <div class="mb-3">
                                    <label for="couponName" class="form-label">Coupon Name</label>
                                    <input type="text" value="<%= coupon.couponName %>" class="form-control" id="couponName" name="couponName" required>
                                    <div id="couponNameError" class="error-message text-danger"></div>
                                </div>
                                <div class="mb-3">
                                    <label for="couponCode" class="form-label">Coupon Code</label>
                                    <input type="text" value="<%= coupon.couponCode %>" class="form-control" id="couponCode" name="couponCode" required>
                                    <div id="couponCodeError" class="error-message text-danger"></div>
                                </div>
                                <div class="mb-3">
                                    <label for="description" class="form-label">description</label>
                                    <input type="text" value="<%= coupon.description %>" class="form-control" id="description" name="description" required>
                                    <div id="descriptionError" class="error-message text-danger"></div>
                                </div>
                                <div class="mb-3">
                                    <label for="minPurchaseAmount" class="form-label">Min Purchase Amount</label>
                                    <input type="number" value="<%= coupon.minPurchaseAmount %>" class="form-control" id="minPurchaseAmount" name="minPurchaseAmount" required>
                                    <div id="minPurchaseAmountError" class="error-message text-danger"></div>
                                </div>
                                <div class="mb-3">
                                    <label for="discountAmount" class="form-label">Discount Amount</label>
                                    <input type="number" value="<%= coupon.discountAmount %>" class="form-control" id="discountAmount" name="discountAmount" required>
                                    <div id="discountAmountError" class="error-message text-danger"></div>
                                </div>
                                <div class="mb-3">
                                    <label for="validFrom" class="form-label">Valid From</label>
                                    <input type="date" value="<%= coupon.validFrom %>" class="form-control" id="validFrom" name="validFrom" required>
                                    <div id="validFromError" class="error-message text-danger"></div>
                                </div>
                                <div class="mb-3">
                                    <label for="validTo" class="form-label">Valid To</label>
                                    <input type="date" value="<%= coupon.validTo %>" class="form-control" id="validTo" name="validTo" required>
                                    <div id="validToError" class="error-message text-danger"></div>
                                </div>
                            
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <input type="submit" class="btn btn-primary" value="submit" id="saveCouponBtn">
                        </div>
                    </form>
                        </div>
                      </div>
                    </div>
                  </div>
                  <!--end row-->
                </div>
              </div>
            <!-- Widgets End -->


            <!-- Footer Start -->
            <!-- Footer End -->
        </div>
        <!-- Content End -->


        <!-- Back to Top -->
        <a href="#" class="btn btn-lg btn-primary btn-lg-square back-to-top"><i class="bi bi-arrow-up"></i></a>
    </div>

    <!-- JavaScript Libraries -->
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/admin/lib/chart/chart.min.js"></script>
    <script src="/admin/lib/easing/easing.min.js"></script>
    <script src="/admin/lib/waypoints/waypoints.min.js"></script>
    <script src="/admin/lib/owlcarousel/owl.carousel.min.js"></script>
    <script src="/admin/lib/tempusdominus/js/moment.min.js"></script>
    <script src="/admin/lib/tempusdominus/js/moment-timezone.min.js"></script>
    <script src="/admin/lib/tempusdominus/js/tempusdominus-bootstrap-4.min.js"></script>

    <!-- Template Javascript -->
    <script src="/admin/js/main.js"></script>

    <script>
        const validFrom = new Date('<%= coupon.validFrom %>');
        const validTo = new Date('<%= coupon.validTo %>');
        const formattedValidFrom = validFrom.toISOString().split('T')[0];
        const formattedValidTo = validTo.toISOString().split('T')[0];
        
        document.getElementById('validFrom').value = formattedValidFrom;
        document.getElementById('validTo').value = formattedValidTo;
    </script>

    <!-- Form Validation Script -->
    <script>
        function validateCouponForm() {
        // Reset error messages
        clearErrors();
    
        // Get form fields
        const couponName = document.getElementById('couponName').value.trim();
        const couponCode = document.getElementById('couponCode').value.trim();
        const description = document.getElementById('description').value.trim();
        const minPurchaseAmount = parseFloat(document.getElementById('minPurchaseAmount').value);
        const discountAmount = parseFloat(document.getElementById('discountAmount').value);
        const validFrom = document.getElementById('validFrom').value;
        const validTo = document.getElementById('validTo').value;

        // Validate each field
        let isValid = true;
    
        if (isFieldEmptyOrSpaces(couponName)) {
            showError('couponNameError', 'Coupon name is required.');
            isValid = false;
        } else if (couponName.length < 3 || couponName.length > 50) {
            showError('couponNameError', 'Coupon name must be between 3 and 50 characters.');
            isValid = false;
        }
    
        if (isFieldEmptyOrSpaces(couponCode)) {
            showError('couponCodeError', 'Coupon code is required.');
            isValid = false;
        } else if (!/^[A-Z0-9]{6,12}$/.test(couponCode)) {
            showError('couponCodeError', 'Coupon code must be 6-12 characters long and contain only uppercase letters and numbers.');
            isValid = false;
        }

        if (isFieldEmptyOrSpaces(description)) {
            showError('descriptionError', 'Description is required.');
            isValid = false;
        } else if (!/^.{10,100}$/.test(description)) {
            showError('descriptionError', 'Description must be between 10 and 100 characters.');
            isValid = false;
        }
    
        if (isNaN(minPurchaseAmount) || minPurchaseAmount < 0) {
            showError('minPurchaseAmountError', 'Minimum purchase amount must be a non-negative number.');
            isValid = false;
        }
    
        if (isNaN(discountAmount) || discountAmount <= 0) {
            showError('discountAmountError', 'Discount amount must be a positive number.');
            isValid = false;
        }
    
        if (isFieldEmptyOrSpaces(validFrom)) {
            showError('validFromError', 'Valid from date is required.');
            isValid = false;
        }
    
        if (isFieldEmptyOrSpaces(validTo)) {
            showError('validToError', 'Valid to date is required.');
            isValid = false;
        }
    
        // Check if valid from date is before valid to date
        if (new Date(validFrom) >= new Date(validTo)) {
            showError('validToError', 'Valid to date must be after valid from date.');
            isValid = false;
        }
    
        // Disable or enable the submit button based on validation
        document.getElementById('saveCouponBtn').disabled = !isValid;
    
        return isValid;
    }

     // Helper functions
     function isFieldEmptyOrSpaces(value) {
        return value.trim() === '';
    }
    
    function showError(errorId, message) {
        const errorElement = document.getElementById(errorId);
        if (errorElement) {
            errorElement.textContent = message;
        }
    }
    
    function clearErrors() {
        const errorElements = document.querySelectorAll('.text-danger');
        errorElements.forEach(element => {
            element.textContent = '';
        });
    }

    // Event listeners
    document.addEventListener('DOMContentLoaded', function() {
        const addCouponForm = document.getElementById('addCouponForm');
    
        // Add input event listeners to all form fields
        const formFields = addCouponForm.querySelectorAll('input');
        formFields.forEach(field => {
            field.addEventListener('input', validateCouponForm);
        });
    
        // Validate form on submission
        addCouponForm.addEventListener('submit', function(event) {
            if (!validateCouponForm()) {
                event.preventDefault(); // Prevent form submission if validation fails
            }
        });
    
        // Initial validation
        validateCouponForm();
    
        // AJAX submission
    document.getElementById('saveCouponBtn').addEventListener('click', function(event) {
        
    event.preventDefault();
    if (validateCouponForm()) {
        const formData = new FormData(addCouponForm);
        const couponData = Object.fromEntries(formData.entries());
        const couponId = document.getElementById('couponId').getAttribute('data-couponId')
        fetch(`/admin/coupon-edited/${couponId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(couponData),
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                    text: data.message,
                    icon: 'success',
                    timer: 3000,
                    showConfirmButton: false
                });
            } else {
                throw new Error(data.message || 'Error adding coupon');
            }
        })
        .finally(() => {
            window.location.href = "/admin/coupon"; // Fixed here
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                text: error.message || 'Something went wrong',
                icon: 'error',
                timer: 3000,
                showConfirmButton: false
            });
        });
    }
});

});
    </script>
    
</body>

</html>
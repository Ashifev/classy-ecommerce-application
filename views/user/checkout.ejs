<!-- Header Section Begin -->
<%- include('../partials/userHeader') %>
<!-- Header Section End -->

<style>
    .list-group-item.active {
      background: #ffc107;
    }
    /* end common class */
    .top-status ul {
      list-style: none;
      display: flex;
      justify-content: space-around;
      justify-content: center;
      flex-wrap: wrap;
      padding: 0;
      margin: 0;
    }
    .top-status ul li {
      width: 120px;
      height: 120px;
      border-radius: 50%;
      background: #fff;
      display: flex;
      justify-content: center;
      flex-direction: column;
      align-items: center;
      border: 8px solid #ddd;
      box-shadow: 1px 1px 10px 1px #ddd inset;
      margin: 10px 5px;
    }
    .top-status ul li.active {
      border-color: #06c167;
      box-shadow: 1px 1px 20px 1px #ffc107 inset;
    }
    /* end top status */
    
    ul.timeline {
      list-style-type: none;
      position: relative;
    }
    ul.timeline:before {
      content: " ";
      background: #d4d9df;
      display: inline-block;
      position: absolute;
      left: 29px;
      width: 2px;
      height: 100%;
      z-index: 400;
    }
    ul.timeline > li {
      margin: 20px 0;
      padding-left: 30px;
    }
    ul.timeline > li:before {
      content: "\2713";
      background: #fff;
      display: inline-block;
      position: absolute;
      border-radius: 50%;
      border: 0;
      left: 5px;
      width: 50px;
      height: 50px;
      z-index: 400;
      text-align: center;
      line-height: 50px;
      color: #d4d9df;
      font-size: 24px;
      border: 2px solid var(--ogenix-primary);
    }
    ul.timeline > li.active:before {
      content: "\2713";
      background: #28a745;
      display: inline-block;
      position: absolute;
      border-radius: 50%;
      border: 0;
      left: 5px;
      width: 50px;
      height: 50px;
      z-index: 400;
      text-align: center;
      line-height: 50px;
      color: #fff;
      font-size: 30px;
      border: 2px solid var(--ogenix-primary);
    }
    /* end timeline */
    
        
        .list-group-item.active {
          background: #06C167 !important;
        }
    
        .bg-warning {
          background: #06C167 !important;
        }
    
        .modal-content {
          background-color: #fefefe;
          margin: 4% auto;
          padding: 20px;
          border: 1px solid #888;
          width: 70%;
          box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
          transition: transform 0.3s ease-in-out;
          /*transform: translateY(-100%);*/
        }
    
        .close {
          float: right;
          text-align: right;
          font-size: 30px;
        }
    
        .modal-content h2 {
          text-align: center;
          margin-top: -35px;
        }
    
        .button_div {
          justify-content: center;
          text-align: center;
        }
    
        .button_div button {
          margin-right: 10px;
          background: #06C167;
          border: 1px solid #06C167;
          padding: 5px 15px;
          color: #FFFFFF;
          border-radius: 2px;
        }
    
        #addAddressForm input {
          padding: 5px;
        }
    
        .nice-select {
          padding: 0px !important;
          height: 38px !important;
          line-height: 38px !important;
        }
    
        .add_address_button {
          background: #06C167;
          border: 1px solid #06C167;
          padding: 5px 15px;
          color: #FFFFFF;
          border-radius: 2px;
          width: 130px;
          margin-right: 21px;
          
        }
        .add_profile_button {
          background: #06C167;
          border: 1px solid #06C167;
          padding: 5px 15px;
          color: #FFFFFF;
          border-radius: 2px;
        }
  
        .error-message {
      color: red;
      font-size: 12px;
      margin-top: 5px;
    }
        @media (max-width: 768px) {
          .main_flex_div {
            display: flex;
            flex-direction: column;
          }
    
          .inner_flex_div {
            min-width: 100% !important;
          }
    
          .modal-content {
            padding: 10px 0px !important;
            min-width: 95% !important;
            height: 700px;
            overflow: scroll;
          }
    
          .close {
            margin-right: 10px;
          }
        }
      </style>

<style>
  .modal {
      position: fixed;
      z-index: 1000;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0,0,0,0.4);
      display: flex;
      align-items: center;
      justify-content: center;
  }
  .modal-content {
      background-color: #fff;
      padding: 20px;
      border-radius: 8px;
      width: 90%;
      max-width: 400px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }
  .modal-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
  }
  .modal-header h2 {
      margin: 0;
      font-size: 18px;
      font-weight: bold;
  }
  .close {
      color: #aaa;
      font-size: 28px;
      font-weight: bold;
      cursor: pointer;
  }
  .close:hover {
      color: #000;
  }
  .coupon-input {
      display: flex;
      margin-bottom: 20px;
  }
  .coupon-input input {
      flex-grow: 1;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 4px 0 0 4px;
      font-size: 14px;
  }
  .coupon-input button {
      padding: 10px 15px;
      background-color: #179500;
      color: white;
      border: none;
      border-radius: 0 4px 4px 0;
      cursor: pointer;
      font-size: 14px;
  }
  .coupon-badge {
      display: inline-block;
      padding: 5px 10px;
      background-color: #bcffa7;
      color: #0a0a0a;
      border: 1px dashed #a0cc00;
      border-radius: 4px;
      margin-bottom: 10px;
      font-size: 14px;
      cursor: pointer;
      transition: background-color 0.3s, color 0.3s;
  }
  .coupon-badge:hover {
      background-color: #179500;
      color: white;
  }

  .copy-icon {
      margin-left: 5px;
      font-size: 12px;
  }
  #couponDetails h3 {
      margin: 10px 0;
      font-size: 16px;
      color: #179500;
  }
  #couponDetails p {
      margin: 5px 0;
      font-size: 14px;
      color: #333;
  }
  #couponDetails .expiry {
      font-size: 12px;
      color: #888;
  }
  #applyCoupon {
      width: 100%;
      padding: 10px;
      background-color: #179500;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      font-size: 16px;
      margin-top: 20px;
  }
  #applyCoupon:disabled {
      background-color: #ccc;
      cursor: not-allowed;
  }
  #availableCouponsList {
      max-height: 300px;
      overflow-y: auto;
  }

  .coupon-item {
      border: 1px solid #ddd;
      border-radius: 4px;
      padding: 10px;
      margin-bottom: 10px;
  }

  .coupon-item .coupon-badge {
      cursor: pointer;
  }

  .coupon-item .coupon-badge:hover {
      background-color: #179500;
      color: white;
  }

  .remove-coupon-btn {
      margin-left: 10px;
      padding: 5px 10px;
      background-color: #179500;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      font-size: 14px;
  }
  @media (max-width: 768px) {
      .modal-content {
          width: 95%;
      }
  }
  
</style>
    <!-- Breadcrumb Section Begin -->
    <section class="breadcrumb-option">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="breadcrumb__text">
                        <h4>Check Out</h4>
                        <div class="breadcrumb__links">
                            <a href="/">Home</a>
                            <a href="/shop">Shop</a>
                            <a href="/shopping-cart">Shopping Cart</a>
                            <span>Check Out</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Breadcrumb Section End -->

    <!-- Checkout Section Begin -->
    <section class="checkout spad">
        <div class="container">
            <div class="checkout__form">
                <form id="checkOutForm">
                    <div class="row">
                        <div class="col-lg-8 col-md-6">
                          <div class="col-lg-4 col-md-3">
                            <h6 class="coupon__code"><span class="icon_tag_alt"></span> <a href="#" id="openAvailableCouponModal" style="color: red;">Available Coupons</a></h6>
                            </div>
                            <h6 class="coupon__code"><span class="icon_tag_alt"></span> Have a coupon? <a href="#" id="openCouponModal" style="color: #ff003c;">Click here</a> to enter your code</h6>
                            <div id="addressBook" class="card" >

                                <div  class="card-body">
                                  <h5 style="margin: 10px; font-size: 25px; font-weight: 700;">Shipping Address</h5>
                                  <div class="d-flex justify-content-end">
                                      <button class="add_address_button" type="button"><a style="text-decoration: none; color: #fff;" href="/add-address">Add Address</a></button>
                                  </div>
                                </div>
                  
                  
                                <div class="card-body mt-3">
                                  <ul class="list-group">
                                    <% userAddress.forEach(function(add, index){%>
                                    <li class="list-group-item d-flex justify-content-between">
                                      <div class="col-8">
                                        <input class="form-check-input me-1" type="radio" name="address" value="<%= add._id %>" id="address<%= index %>" <%= index === 0 ? 'checked' : '' %>>
                                      <label class="form-check-label" for="address<%= index %>"><%= add.name %></label>
                                     
                                      <h6> <%= add.address %></h6>
                                      <h6> <%= add.mobile%></h6>
                                      </div>
                                      <div class="col-2">
                                        <a class="btn btn-sm btn-primary" href="/address/<%= add._id %>">Edit</a>
                                      </div>
                               
                                        <div class="col-2 text-center">
                                          <a>
                                            <button
                                            class="btn btn-sm btn-danger"
                                              type="button"
                                              onclick="block_unblock('<%= add._id %>')"
                                            >
                                              Delete
                                            </button>
                                          </a>
                                        </div>
                                   
                                    </li>
                                    <%})%>
                                  </ul>
                                </div>
                              </div>
                        </div>
                        <div class="col-lg-4 col-md-6">
                            <div class="checkout__order">
                                <h4 class="order__title">Your order</h4>
                                <div class="checkout__order__products">Product <span>Total</span></div>
                                <ul class="checkout__total__products">
                                    <% userCart.products.forEach(function(product,index){ %>
                                    <li><%= index + 1%>. <%=product.productId.name%><em style="padding-left: 70px;font-size: 12px;"><%=product.quantity%> x ₹<%=product.productId.price%></em><span>₹<%=product.productId.price * product.quantity%></span></li>
                                    <%})%>
                                </ul>
                                <ul class="checkout__total__all">
                                    <li>Subtotal <span>₹<%=subTotal%></span></li>
                                    
                                      <li>Discount<span>-₹<%=discount.toFixed(2)%></span></li>
                                    
                                      <% if(appliedCoupon) { %>
                                          <li>Coupon Discount <span>-₹<%= discountAmount.toFixed(2) %></span></li>
                                        
                                      <% } else { %>
                                          <li>Total <span>₹<%= totalPrice %></span></li>
                                      <% } %>
                                    <li>Delivery Fee <span>Free <s>₹80</s></span></li>
                                    <li>Total <span id="totalAmt">₹<%=totalPrice%></span></li>
                                </ul>

                                <div class="checkout__input__checkbox">
                                  <!-- <label for="COD">
                                    Cash On Delivery
                                    <input type="radio" id="payment" name="payment" value="COD">
                                    <label class="form-check-label" for="COD"></label>
                                </label> <label for="razorpay" >
                                  Razorpay
                                  <input type="radio" name="payment" value="razorpay">

                              </label> <label for="wallet">
                                Wallet
                                <input type="radio" id="payment" name="payment" value="Wallet">
                                <span class="checkmark"></span>
                            </label> -->
                              
                                <input  class="form-check-input me-1" type="radio" id="COD" name="payment" value="COD">
                                <label class="form-check-label" for="COD">COD</label>

                                <input class="form-check-input me-1" type="radio" name="payment" value="razorpay" id="razorpay" >
                                <label class="form-check-label" for="razorpay">Razorpay</label>

                                <input class="form-check-input me-1" type="radio" name="payment" value="Wallet" id="Wallet" >
                                <label class="form-check-label" id="walletBalace" data-balance="" for="Wallet">Wallet (bal : ₹<%= wallet?.balance ? wallet?.balance : 0 %>) </label>
                                     
                                    <div class="error-message" id="confirmCheckoutError"></div>
                                </div>
                                
                                <input type="hidden" name="cart" value='<%= JSON.stringify(userCart.products) %>'>
                                <input type="hidden" id name="totalPrice" value="<%= totalPrice %>">
                                
                                <button type="submit" id="placeOrderBtn" class="site-btn">PLACE ORDER</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </section>

    <!-- Coupon Modal -->
<div id="couponModal" class="modal" style="display: none;">
  <div class="modal-content">
      <div class="modal-header">
          <h2>APPLY COUPON</h2>
          <span class="close">&times;</span>
      </div>
      <div class="modal-body">
          <div class="coupon-input">
              <input type="text" id="couponCode" name="couponCode" placeholder="Enter coupon code">
              <button id="checkCoupon">CHECK</button>
          </div>
          <div id="couponDetails" style="display: none;">
              <div class="coupon-badge"></div>
              <h3></h3>
              <p class="description"></p>
              <p class="expiry"></p>
          </div>
      </div>
      <div class="modal-footer">
          <button id="applyCoupon" disabled>APPLY</button>
      </div>
  </div>
</div>

<!-- Available Coupons Modal -->
<div id="availableCouponsModal" class="modal" style="display: none;">
  <div class="modal-content">
      <div class="modal-header">
          <h2>AVAILABLE COUPONS</h2>
          <span class="close">&times;</span>
      </div>
      <div class="modal-body">
          <div id="availableCouponsList">
              <% coupons.forEach(coupon => { %>
                  <div class="coupon-item">
                      <div class="coupon-badge" data-coupon="<%= coupon.couponCode %>">
                          <%= coupon.couponCode %>
                          <span class="copy-icon"></span>
                      </div>
                      <h5>Save ₹<%= coupon.discountAmount %></h5>
                      <p class="description"><%= coupon.description %></p>
                      <p class="expiry">Expires on: <%= new Date(coupon.validTo).toLocaleDateString() %></p>
                  </div>
              <% }) %>
          </div>
      </div>
  </div>
</div>

    <!-- Checkout Section End -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <!-- <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> -->
    <!-- <script src="path/to/toastr.js"></script> -->

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.1/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <!--toast-->
    <!-- Include Toastr CSS -->


<!-- Custom showErrorToast Function -->

<script>
  const showErrorToast = async (message) => {
    Swal.fire({
    position: "top",
    icon: "error",
    title: message,
    showConfirmButton: false,
    timer: 1500
});
  };
</script>

<!-- <script>
  const showErrorToast = async (message)=> {
  toastr.error(message, "Error", {
    closeButton: true,
    progressBar: true,
    positionClass: "toast-top-right",
    timeOut: 5000,
    extendedTimeOut: 1000,
    showMethod: "fadeIn",   // Replace "slideDown" with "fadeIn"
    hideMethod: "fadeOut"   // Replace "slideUp" with "fadeOut"
  });
} 

  function showError(input, message) {
    let errorElement = input.parentElement.querySelector(".error-message");
    if (!errorElement) {
      errorElement = document.createElement("div");
      errorElement.classList.add("error-message");
      errorElement.style.color = "red";
      input.parentElement.appendChild(errorElement);
    }
    errorElement.textContent = message;
  }

  function removeError(input) {
    const errorElement = input.parentElement.querySelector(".error-message");
    if (errorElement) {
      errorElement.remove();
    }
  }
</script>  -->


    <script>
        // address delete
      function block_unblock(id) {
        console.log(id, "ggygygy");
        // Show SweetAlert confirmation dialog
        Swal.fire({
          title: "Are you sure?",
          text: "You won't be able to revert this!",
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#3085d6",
          cancelButtonColor: "#d33",
          confirmButtonText: "Yes, Delete it!",
        }).then((result) => {
          if (result.isConfirmed) {
            console.log("ajax working");
            $.ajax({
              url: "/deleteAddress/" + `${id}`,
              method: "patch",
              success: function (res) {
                Swal.fire({
                  text: res.msg,
                  icon: "success",
                  timer: 3000,
                  showConfirmButton: false,
                });
                console.log("loggggggg");
                setTimeout(() => {
                  window.location.reload();
                }, 1000);
              },
              error: function (err) {
                Swal.fire({
                  text: "Something went wrong",
                  icon: "error",
                  timer: 3000,
                  showConfirmButton: false,
                });
                console.log(err);
              },
            });
          }
        });
      }
    </script>

<!-- <script>
  function validateChekout(event){
      var paymentCheckbox = document.getElementById('payment');
      if (!paymentCheckbox.checked) {
          confirmCheckoutError.textContent = 'Please select the payment method.';
          confirmCheckoutError.style.display = 'block';
          
        return false;
      }
      if(paymentCheckbox.checked){
        event.preventDefault();
        Swal.fire({
        text: "Order Placed Successfully",
        icon: "success",
        timer: 1500,
        timerProgressBar: true,
        showConfirmButton: false,
        }).then(() => {
          document.querySelector('form[action="/submit-order"]').submit();
        });
                
      }
  }
  
</script> -->

<script>
  var couponsData = JSON.parse('<%- JSON.stringify(coupons) %>'.replace(/&#34;/g, '"'));
  document.addEventListener("DOMContentLoaded", () => {
    const checkoutForm = document.getElementById('checkoutForm');
    const couponSection = document.querySelector('.coupon__code');
    const modal = document.getElementById("couponModal");
    const availableCouponsModal = document.getElementById("availableCouponsModal");
    const openCouponModalBtn = document.getElementById("openCouponModal");
    const openAvailableCouponsModalBtn = document.getElementById("openAvailableCouponModal");
    const closeBtns = document.getElementsByClassName("close");
    const checkCouponBtn = document.getElementById("checkCoupon");
    const couponCodeInput = document.getElementById("couponCode");
    const couponDetails = document.getElementById("couponDetails");
    const applyCouponBtn = document.getElementById("applyCoupon");

    // Modal functionality
    openCouponModalBtn.onclick = function(e) {
        e.preventDefault();
        modal.style.display = "flex";
    }

    openAvailableCouponsModalBtn.onclick = function(e) {
        e.preventDefault();
        availableCouponsModal.style.display = "flex";
    }

    Array.from(closeBtns).forEach(btn => {
        btn.onclick = function() {
            modal.style.display = "none";
            availableCouponsModal.style.display = "none";
        }
    });

    window.onclick = function(event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
        if (event.target == availableCouponsModal) {
            availableCouponsModal.style.display = "none";
        }
    }

    // Coupon functionality
    checkCouponBtn.onclick = function() {
        var couponCode = couponCodeInput.value.trim().toUpperCase();
        var coupon = couponsData.find(c => c.couponCode === couponCode);
        
        if (coupon) {
            document.querySelector('.coupon-badge').textContent = coupon.couponCode;
            document.querySelector('#couponDetails h3').textContent = `Save ₹${coupon.discountAmount}`;
            document.querySelector('#couponDetails .description').textContent = coupon.description;
            document.querySelector('#couponDetails .expiry').textContent = `Expires on: ${new Date(coupon.validTo).toLocaleDateString()}`;
            
            couponDetails.style.display = "block";
            applyCouponBtn.disabled = false;
        } else {
            showNotification("Invalid coupon code", true);
            couponDetails.style.display = "none";
            applyCouponBtn.disabled = true;
        }
    }

    applyCouponBtn.onclick = function() {
        var couponCode = couponCodeInput.value.trim().toUpperCase();

        Swal.fire({
            title: 'Applying Coupon',
            text: 'Please wait...',
            allowOutsideClick: false,
            showConfirmButton: false,
            willOpen: () => {
                Swal.showLoading();
            }
        });

        fetch('/applycoupon', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ couponCode: couponCode }),
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
              console.log("enter successsfully hereee");
              
                showNotification(`Coupon applied successfully! You saved ₹${data.discountAmount}`, false);
                updateTotalPrice(data.newTotal, data.discountAmount);
                modal.style.display = "none";
                addRemoveCouponButton(couponCode);
            } else {
                showNotification(data.message || "Failed to apply coupon", true);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showNotification("An error occurred while applying the coupon", true);
        })
        .finally(() => {
            Swal.close();
        });
    }

    function addRemoveCouponButton(couponCode) {
        const existingButton = document.getElementById('removeCouponBtn');
        if (existingButton) {
            existingButton.remove();
        }
        const removeCouponButton = document.createElement('button');
        removeCouponButton.textContent = 'Remove Coupon';
        removeCouponButton.id = 'removeCouponBtn';
        removeCouponButton.classList.add('remove-coupon-btn');
        removeCouponButton.type = 'button'; 
        couponSection.appendChild(removeCouponButton);
    }

    function removeCoupon(event) {
        event.preventDefault();
        event.stopPropagation();
        
        Swal.fire({
            title: 'Removing Coupon',
            text: 'Please wait...',
            allowOutsideClick: false,
            showConfirmButton: false,
            willOpen: () => {
                Swal.showLoading();
            }
        });

        fetch('/removecoupon', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            if (data.success) {
                Swal.fire({
                    title: 'Success',
                    text: 'Coupon removed successfully',
                    icon: 'success',
                    confirmButtonText: 'OK'
                }).then(() => {
                    location.reload();
                });
            } else {
                throw new Error(data.message || "Failed to remove coupon");
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                title: 'Error',
                text: error.message || "An error occurred while removing the coupon",
                icon: 'error',
                confirmButtonText: 'OK'
            });
        });
    }

    function updateTotalPrice(newTotal, discountAmount) {
        const totalSpan = document.querySelector('.checkout__total__all li:last-child span');
        totalSpan.textContent = `₹${newTotal.toFixed(2)}`;

        const discountLi = document.createElement('li');
        discountLi.classList.add('discount-line');
        discountLi.textContent = `Coupon Discount`;
        const discountSpan = document.createElement('span');
        discountSpan.textContent = `-₹${discountAmount.toFixed(2)}`;
        discountLi.appendChild(discountSpan);

        const totalAllUl = document.querySelector('.checkout__total__all');
        totalAllUl.insertBefore(discountLi, totalAllUl.lastElementChild);
    }

    function showNotification(message, isError = false) {
        Toastify({
            text: message,
            duration: 5000,
            close: true,
            gravity: "top",
            position: "center",
            backgroundColor: isError ? "red" : "#179500",
        }).showToast();
    }

        // Clipboard functionality for coupon codes
        document.querySelectorAll('.coupon-badge').forEach(badge => {
        badge.addEventListener('click', function() {
            const couponCode = this.dataset.coupon;
            navigator.clipboard.writeText(couponCode).then(() => {
                showNotification('Coupon code copied!', false);
            }).catch(err => {
                console.error('Failed to copy: ', err);
                showNotification('Failed to copy coupon code', true);
            });
        });
    });

     // Keyboard accessibility for modals
     document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            modal.style.display = 'none';
            availableCouponsModal.style.display = 'none';
        }
    });

    const modalElement = document.querySelector('.modal-content');
    modalElement.addEventListener('keydown', function(e) {
        if (e.key === 'Tab') {
            const focusableContent = modalElement.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])');
            const firstFocusableElement = focusableContent[0];
            const lastFocusableElement = focusableContent[focusableContent.length - 1];

            if (e.shiftKey) {
                if (document.activeElement === firstFocusableElement) {
                    lastFocusableElement.focus();
                    e.preventDefault();
                }
            } else {
                if (document.activeElement === lastFocusableElement) {
                    firstFocusableElement.focus();
                    e.preventDefault();
                }
            }
        }
    });

    // Event delegation for remove coupon button
    document.body.addEventListener('click', function(event) {
        if (event.target && event.target.id === 'removeCouponBtn') {
            removeCoupon(event);
        }
    });

    const radioButtons = document.querySelectorAll(
      'input[name="address"]'
    );
    const paymentMethods = document.querySelectorAll('input[name="payment"]');
    const placeOrderBtn = document.querySelector("#placeOrderBtn");
    let selectedAddress;
    let selectedPayment = null;
    


    radioButtons.forEach((radioButton) => {
  if (radioButton.checked) {
    selectedAddress = radioButton.value;
  }

  // Add event listener for when a radio button changes
  radioButton.addEventListener("change", () => {
    selectedAddress = radioButton.value;
  });
});

    paymentMethods.forEach((paymentMethod) => {
      paymentMethod.addEventListener("change", () => {
        selectedPayment = paymentMethod.id;
      });
    });

    placeOrderBtn.addEventListener("click", async function (e) {
      e.preventDefault();
      try {

        const totalAmtElement = document.getElementById("totalAmt");
        const totalAmtText = totalAmtElement.textContent.trim();
        const totalAmt = totalAmtText.replace("₹", "");
        console.log("totl",totalAmt);

        // const walletElement = document.getElementById("walletBalace");
        // const walletBalance = walletElement.getAttribute("data-balance");
        // console.log("walletBalance", walletBalance);

       if(!selectedAddress){        
        showErrorToast("please select any address");
        return
        }

        if (
          selectedPayment === "COD" ||
          selectedPayment === "Wallet"
        ) {
          saveOrderOnCashOnDelivery(totalAmt, selectedPayment, selectedAddress);
        } else if (selectedPayment === "razorpay") {
          initiateRazorPayPayment(totalAmt,selectedPayment, selectedAddress);
          return;
        } else {
          alert("please select any payment method")
          showErrorToast("please select any payment method");
        }
      } catch (error) {
        console.log(error);
        Swal.fire({
          title: "Something went wrong",
          icon: "error",
          showCancelButton: false,
          confirmButtonColor: "#3085d6",
          confirmButtonText: "OK",
        }).then(async (result) => {
          window.location.reload();
        });
      }
    });

    

  });
</script>

<!-- wallet and cashOnDelivery peyment function -->
<script>
  const saveOrderOnCashOnDelivery = async (
    totalPrice,
    selectedPayment,
    selectedAddress,
    walletBalance
  ) => {
    console.log("total Price",totalPrice);
    console.log("method",selectedPayment);
    
    if (selectedPayment === "Wallet") {
      console.log("here if");
      
      if (Number(walletBalance) < Number(totalPrice)) {

        showErrorToast("Insufficient balance in Wallet");
        return;
      }
    }
    if (Number(totalPrice) > 1000 && selectedPayment === "COD") {
        console.log("payment method COD and total above 1000rs");
        showErrorToast("COD is not allowed for orders above Rs1000.");
        return;
      } else {
      try {
        const response = await fetch("/submit-order", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            address: selectedAddress,
            payment: selectedPayment,
            totalPrice
          }),
        });
        const data = await response.json();
        console.log("oooooorrrrdddder",data);

        if (response.ok) {
          Swal.fire({
            title: "Your order has been created",
            icon: "success",
            showCancelButton: false,
            confirmButtonColor: "#3085d6",
            confirmButtonText: "OK",
          }).then(async (result) => {
            window.location.href = `/order-placed/${data._id}`;
          });
        } else {
          Swal.fire({
            title: `${data.message}`,
            icon: "error",
            showCancelButton: false,
            confirmButtonColor: "#3085d6",
            confirmButtonText: "OK",
          });
        }
      } catch (error) {
        console.log(error);
        Swal.fire({
          title: "Something went wrong",
          icon: "error",
          showCancelButton: false,
          confirmButtonColor: "#3085d6",
          confirmButtonText: "OK",
        }).then(async (result) => {
          window.location.reload();
        });
      }
    }
  };
</script>

<!-- intialising razorpay method -->
<script>
  const initiateRazorPayPayment = async (totalAmt, selectedPayment, selectedAddress) => {

    //getting razor-pay secret key
    const response = await fetch("/razor-key", {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
      },
    });

    const data = await response.json();
    console.log("data",data);
    console.log("in amt",totalAmt);

    //creating razor pay order
    const razorOrder = await fetch("/razor-order", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ amount: parseInt(totalAmt) }),
    });

    const order = await razorOrder.json();
    console.log("order",order);
    
    //razor pay configurations
    let options = {
      key: data.key,
      amount: parseInt(totalAmt) * 100,
      currency: "INR",
      name: "CALSSY",
      description: "Test Transaction",
      image: `/images/logo3.png`,
      order_id: order.order.id,
      handler: function (response) {
        saveOrderRazor(response, selectedPayment, selectedAddress, totalAmt);
      },
      prefill: {
        name: "jhone",
        email: "jhone@example.com",
        contact: "9000090000",
      },
      notes: {
        address: "Razor pay Corporate Office",
      },
      theme: {
        color: "#1818c4",
      },
    };

    const razor = new window.Razorpay(options);
    razor.open();


    // If failed toast it.
    razor.on("payment.failed", async function (response) {
    
      try {
        const newOrder = await fetch("/failed-order-submit", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            address: selectedAddress,
            payment: selectedPayment,
            totalPrice : Number(totalAmt)
            // couponCode: couponCode,
          }),
        });
        const data = await newOrder.json();
 
//saving payment
// const verifyData = await fetch("/razor-verify-failedPayment", {
//   method: "POST",
//   headers: {
//     "Content-Type": "application/json",
//   },
//   body: JSON.stringify({
//     ...response,
//     orderId: data.newOrder.orderId,
//   }),
// });

console.log("newOrder",newOrder);



if(newOrder.ok){
  Swal.fire({
          title: "Payment failed Order created with payment status Failed",
          icon: "success",
          showCancelButton: false,
          confirmButtonColor: "#3085d6",
          confirmButtonText: "OK",
        })
        .then(async (result) => {
          window.location.href = `/profile#order`;
        });
}else{
  showErrorToast("something went wrong try again");
}
      } catch (error) {
        console.log("faild payment error",error);
        showErrorToast("something went wrong");
      }
    });
  };
</script>


<!--Creating razorpay order-->
<script>
  const saveOrderRazor = async (razorResponse, selectedPayment, selectedAddress, totalAmt) => {
    try {
      //saving the order
      const response = await fetch("/submit-order", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          address: selectedAddress,
          payment: selectedPayment,
          totalPrice : parseInt(totalAmt)
        }),
      });

      const data = await response.json();

      //saving payment
      const verifyData = await fetch("/razor-varify", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          ...razorResponse,
        }),
      });

      if (verifyData.ok) {
        Swal.fire({
          title: "Your order has been created",
          icon: "success",
          showCancelButton: false,
          confirmButtonColor: "#3085d6",
          confirmButtonText: "OK",
        }).then(async (result) => {
          window.location.href = `/order-placed/${data._id}`;
        });
      }else{
        showErrorToast("somthing went wrong");
      }

    } catch (error) {
      console.log(error);
      alert("errrrrrrrrrrr")
      showErrorToast(error.response?.data?.error || "something went wrong");
    }
  };
</script>


<!-- <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css"> -->
<!-- <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script> -->

<!-- <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet"/> -->

<!-- Include Toastr JS -->
<!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script> -->

<!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script> -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- Footer Section Begin -->
<%- include('../partials/userFooter') %>
<!-- Footer Section End -->
